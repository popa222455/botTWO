from chat.chatter import Chatter, Two, One, Any, Compare, Join

chatter = Chatter()

hello = "привет", "приветики", "привет!", "ку", "привет"

only_hello = Any(hello, Compare.equals, 0)
has_hello = Any(hello, Compare.inside, 0)
has_hello_last = Any(hello, Compare.inside, 2)

chatter.add(Two(has_hello_last, has_hello, Join.everything), "ты уже здоровался!")
chatter.add(only_hello, "я приветствую тебя!")
chatter.add(has_hello, "я приветствую тебя, но я не понял остальной части предложения!")

chatter.add(One("", Compare.inside, 0), "Я не понял!", "Не понимаю!", "Что?")

'''
** Важные пункты:
1. Всё взаимодействие происходит через chatter, его нельзя переназначать и т.д.
2. Добавлять реплики надо через chatter.add(*условие*, *ответ1*, *ответ2*, *ответ3*...).
   Выбирается случайный из возможных ответов
3. Строки рассматриваются, независимо от регистра!
4. В истории сообщений сохраняются только сообщения, на которые ответил и какими ответил бот.

** Сравнения:
Сравнение - это функция, которая принимает две строки и возвращет булевое значение - равны ли эти строки.
- Compare.close - True, если строки похожи на 80% (с помощью difflib)
- Compare.inside - True, если вторая строка есть в первой (строка в сообщении пользователя)
- Compare.equals - True, если строки идентичны
- Compare.not_close - True, если строки похожи менее, чем на 80% (с помощью difflib)
- Compare.not_inside - True, если вторая строка отсутствует в первой (строка в сообщении пользователя)
- Compare.not_equals - True, если строки не идентичны

** Реплика поиска:
Диалог с пользователем хранится в формате:
0: Текущее сообщение пользователя
1: Последнее сообщение бота
2: Прошлое сообщение пользователя
3: Ответ бота
и т.д.
Реплика поиска - номер строки, которая рассматривается в условии

** Условия:
Условие - это то, что определяет, будет отвечать на сообщение бот или нет. Условия бывают нескольких видов и
обрабатываются в порядке от первого добавленного до последнего(сверху вниз).

Any(*строка или список строк*, *сравнение*, *реплика поиска*)
Срабатывает, когда *сравнение* вернёт True, на любую из *строк* в *реплика поиска*

All(*стока или список строк*, *сравнение*, *реплика поиска*)
Срабатывает, когда *сравнение* вернёт True, на все *строки* в *реплика поиска*

One(*стока*, *сравнение*, *реплика поиска*)
Срабатывает, когда *сравнение* вернёт True, на *строку* в *реплика поиска*

Two(*условие1*, *условие2*, *объединение условий*)
Срабатывает, когда *объединение условий* вернёт True, на результаты *условий*.

** Объединение условий:
Объединение условий - это функция, которая принимает два булевых значения и возвращет булевое
значение - объединение условий.
- Join.anything - True, если выполнено хотя бы одно условие
- Join.everything - True, если вторая все условия выполнены
- Join.nothing - True, если ни одно из условий не выполнено
'''
